plugins {
    id 'java-library'
    id 'se.patrikerdes.use-latest-versions'
    id 'com.github.ben-manes.versions'
    id 'org.liquibase.gradle' version '2.2.1'
    id 'org.jooq.jooq-codegen-gradle' version '3.19.7'

}


apply plugin: 'java-library'


compileJava {
    options.compilerArgs += ["-Xlint:deprecation", "--enable-preview",]

}
compileTestJava {
    options.compilerArgs += ["-Xlint:deprecation", "--enable-preview",]

}
test {
    jvmArgs '--enable-preview'
}

compileJava.options.encoding = 'UTF-8'
group 'ish'
version '1.0'
update.dependsOn processResources
//classes.dependsOn update


repositories {
    mavenCentral()
    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots"
        mavenContent {
            snapshotsOnly()
        }
    }

}

sourceCompatibility = "22.PREVIEW"
targetCompatibility = "22.PREVIEW"
dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'
    implementation "org.mariadb.jdbc:mariadb-java-client:3.3.3"

    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    api group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
    api group: 'org.apache.commons', name: 'commons-text', version: '1.12.0'
    api group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
    api 'org.jetbrains:annotations:24.1.0'
    api 'com.neovisionaries:nv-i18n:1.29'

// https://mvnrepository.com/artifact/org.jooq/jooq-meta-extensions
    jooqCodegen "org.mariadb.jdbc:mariadb-java-client:3.3.3"

    api 'org.beryx:awt-color-factory:1.0.2'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.1.0'
    api group: 'org.apache.commons', name: 'commons-collections4', version: '4.5.0-M1'
    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation 'org.jooq:jooq:3.19.7'


//    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.25'

    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.assertj:assertj-core:3.25.3'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'

    testImplementation "org.testcontainers:testcontainers:1.19.7"
    testImplementation "org.testcontainers:junit-jupiter:1.19.7"
    testImplementation "org.testcontainers:mariadb:1.19.7"
    testImplementation 'org.liquibase:liquibase-core:4.27.0'

// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    liquibaseRuntime 'org.mariadb.jdbc:mariadb-java-client:3.3.3'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.27.0'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.3'
//    liquibaseRuntime group: 'mysql', name: 'mysql-connector-java', version: '8.0.25'
    liquibaseRuntime group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359'
// https://mvnrepository.com/artifact/org.yaml/snakeyaml
    liquibaseRuntime group: 'org.yaml', name: 'snakeyaml', version: '2.2'
    liquibaseRuntime files('build/classes/java/main')
    liquibaseRuntime files('build/resources/db')
}
liquibase {

    activities {

        main {

            classpath "$projectDir"
            Properties properties = new Properties()
            properties.load(project.rootProject.file('model/src/main/resources/datasource.properties').newDataInputStream())
            changeLogFile "src/main/resources/db/changelog.yaml"
            url properties['jdbcUrl']
            username properties['username']
            password properties['password']

        }

    }
}
compileJava {
    options.compilerArgs += ["-Xlint:deprecation", "--enable-preview"]

}
compileTestJava {
    options.compilerArgs += ["-Xlint:deprecation", "--enable-preview"]

}


test {
    useJUnitPlatform()
    jvmArgs '--enable-preview'

}

tasks.withType(JavaCompile).configureEach {
    options.fork = true
}


jooq {
    configuration {
        jdbc {
            driver = 'org.mariadb.jdbc.Driver'
            url = 'jdbc:mariadb://localhost:3306/lastfm'
            user = 'lastfm'
            password = 'lastfm'
        }
        generator {
            database {
                name = 'org.jooq.meta.mariadb.MariaDBDatabase'
                inputSchema = 'lastfm'
                excludes = 'DATABASECHANGELOG | DATABASECHANGELOGLOCK'

            }
            strategy {
                name = ''
            }
            generate {
                deprecated = false
            }
            target {
                packageName = 'dao.jooq'
                directory = "$buildDir/generated"
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java', "$buildDir/generated"
        }
    }
}
